{"ast":null,"code":"import { startWith, Subject, switchMap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./employee.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction AppComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 1);\n    i0.ɵɵlistener(\"click\", function AppComponent_li_1_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const employee_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.remove(employee_r1.id));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const employee_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate4(\" \", employee_r1.id, \" - \", employee_r1.firstName, \" \", employee_r1.lastName, \" - \", employee_r1.role, \" \");\n  }\n}\n\nexport class AppComponent {\n  constructor(employeeService) {\n    this.employeeService = employeeService;\n    this.employeesSubject$ = new Subject();\n    this.employees$ = this.employeesSubject$.asObservable().pipe(startWith(null), switchMap(() => this.employeeService.getEmployees()));\n  }\n\n  remove(id) {\n    this.employeeService.deleteEmployee(id).subscribe(() => this.employeesSubject$.next(null));\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 3,\n  vars: 3,\n  consts: [[3, \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ul\");\n      i0.ɵɵtemplate(1, AppComponent_li_1_Template, 2, 4, \"li\", 0);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 1, ctx.employees$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAoBA,SAApB,EAA+BC,OAA/B,EAAwCC,SAAxC,QAAwD,MAAxD;;;;;;;;;ICDEC;IAEEA;MAAA;MAAA;MAAA;MAAA,OAASA,6CAAT;IAA4B,CAA5B;IACAA;IACFA;;;;;IADEA;IAAAA;;;;ADMJ,OAAM,MAAOC,YAAP,CAAmB;EAKvBC,YAAoBC,eAApB,EAAoD;IAAhC;IAHpB,yBAAoB,IAAIL,OAAJ,EAApB;IAIE,KAAKM,UAAL,GAAkB,KAAKC,iBAAL,CAAuBC,YAAvB,GAAsCC,IAAtC,CAChBV,SAAS,CAAC,IAAD,CADO,EAEhBE,SAAS,CAAC,MAAM,KAAKI,eAAL,CAAqBK,YAArB,EAAP,CAFO,CAAlB;EAID;;EAEDC,MAAM,CAACC,EAAD,EAAW;IACf,KAAKP,eAAL,CAAqBQ,cAArB,CAAoCD,EAApC,EAAwCE,SAAxC,CAAkD,MAAM,KAAKP,iBAAL,CAAuBQ,IAAvB,CAA4B,IAA5B,CAAxD;EACD;;AAdsB;;;mBAAZZ,cAAYD;AAAA;;;QAAZC;EAAYa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVzBlB;MACEA;;MAKFA;;;;MAJyBA;MAAAA","names":["startWith","Subject","switchMap","i0","AppComponent","constructor","employeeService","employees$","employeesSubject$","asObservable","pipe","getEmployees","remove","id","deleteEmployee","subscribe","next","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\KevinRothenbühler-Al\\IdeaProjects\\Training\\First-febe\\FE-first-rest-server\\src\\app\\app.component.ts","C:\\Users\\KevinRothenbühler-Al\\IdeaProjects\\Training\\First-febe\\FE-first-rest-server\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {EmployeeService} from \"./employee.service\";\nimport {Observable, startWith, Subject, switchMap} from \"rxjs\";\nimport {Employee} from \"./model/Employee\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  employeesSubject$ = new Subject();\n  employees$: Observable<Employee[]>;\n\n  constructor(private employeeService: EmployeeService) {\n    this.employees$ = this.employeesSubject$.asObservable().pipe(\n      startWith(null),\n      switchMap(() => this.employeeService.getEmployees())\n    );\n  }\n\n  remove(id: number) {\n    this.employeeService.deleteEmployee(id).subscribe(() => this.employeesSubject$.next(null));\n  }\n}\n","<ul>\n  <li\n    *ngFor=\"let employee of employees$ | async\"\n    (click)=\"remove(employee.id)\">\n    {{ employee.id }} - {{ employee.firstName }} {{ employee.lastName }} - {{ employee.role }}\n  </li>\n</ul>\n"]},"metadata":{},"sourceType":"module"}